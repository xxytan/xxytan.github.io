<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>用Termux部署Hexo</title>
    <link href="/2025/08/15/%E7%94%A8Termux%E9%83%A8%E7%BD%B2Hexo/"/>
    <url>/2025/08/15/%E7%94%A8Termux%E9%83%A8%E7%BD%B2Hexo/</url>
    
    <content type="html"><![CDATA[<blockquote><p>此篇文章结合网络上的方法已经我个人的一些经验撰写，可能有些许不足，请谅解</p></blockquote><p><em>正文开始</em></p><table style="width:10%;"><tbody><tr><td>## 1.安装并部署Termux环境</td></tr><tr><td>* #### 1.1.安装Termux 可以使用<ahref="https://github.com/termux/termux-app/releases/latest">官方的Termux</a>或第三方的类似于<ahref="https://github.com/hanxinhao000/ZeroTermux/releases/latest">ZeroTermux（推荐)</a>（以此做演示）打开后授予最基本的权限 &gt;如果您是非ROOT用户，<strong><u>强烈建议您使用ZeroTermux进行下列步骤</u></strong>，否则后期编辑配置文件会很困难（当然你如果要是会命令行编辑，用官方版的也行）* #### 1.2.换源其目的是在国内提高下载速度（挂着加速器可以无需进行此步）</td></tr><tr><td>在命令框输入 <figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs coq">termux-<span class="hljs-built_in">change</span>-repo<br></code></pre></td></tr></table></figure> 并回车，此时会出现<imgsrc="https://img.224322.xyz/file/25-08-15-1.png" alt="1.这样的界面" />&gt;&gt;<em>我们可以使用右下角的方向按钮操控，也可以直接用手点</em></td></tr><tr><td>选择第二个选项，便会出现<imgsrc="https://img.224322.xyz/file/25-08-15-2.png" alt="2.这样的界面" /><em>如果您英文很好，那么可以根据右边的注释来选择，</em>如果看不懂，那么直接无脑<strong>选带有<code>tuna</code>字样</strong>的，这是清华大学的镜像源</td></tr><tr><td>换完源之后，我们就可以进行 * #### 1.3.安装Node.js 在命令框输入<figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">pkg <span class="hljs-keyword">install</span><br></code></pre></td></tr></table></figure> 更新一下软件包库，然后再输入 <figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">pkg <span class="hljs-keyword">install</span> nodejs<br></code></pre></td></tr></table></figure><strong>或者</strong> <figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">pkg <span class="hljs-keyword">install</span> nodejs-lts<br></code></pre></td></tr></table></figure>&gt;&gt;<em>这俩的区别就是一个是稳定版，一个是长期版</em></td></tr><tr><td>如果顺利的话，接下来过程中无论停在那里都输入<code>y</code>并回车，安装结束后就可以进行* #### 1.4.安装Git和OpenSSH其目的是能让Termux能正常连接到Github并将Hexo部署到Github Pages</td></tr><tr><td>在命令框输入 <figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 1c">pkg install git<span class="hljs-meta">&amp;&amp;openssh</span><br></code></pre></td></tr></table></figure>依旧停顿就按<code>y</code>，安装完后再进行配置： * #####1.4.1.配置Git</td></tr><tr><td>输入 <figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs verilog">git <span class="hljs-keyword">config</span> --<span class="hljs-keyword">global</span> user<span class="hljs-variable">.name</span> 你的Github用户名; git <span class="hljs-keyword">config</span> --<span class="hljs-keyword">global</span> user<span class="hljs-variable">.email</span> 你的Github绑定邮箱<br></code></pre></td></tr></table></figure> &gt; &gt; &gt; 没有Github账号可以先<ahref="https://github.com/signup">注册</a>一个</td></tr><tr><td>* ##### 1.4.2.配置公钥</td></tr><tr><td>输入 <figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs excel">ssh-keygen -<span class="hljs-built_in">t</span> rsa -C 你的Github绑定邮箱<br></code></pre></td></tr></table></figure> 连续按三次回车，运行结束后再输入 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> ~/.ssh/id_rsa.pub<br></code></pre></td></tr></table></figure>把输出的一大长串全部复制，并保存，<strong>后面会用到</strong></td></tr><tr><td>* ## 2.部署Hexo框架</td></tr><tr><td>* #### 2.1.部署 先输入 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> ..; <span class="hljs-built_in">mkdir</span> hexo; <span class="hljs-built_in">cd</span> hexo<br></code></pre></td></tr></table></figure>&gt;&gt;<em>这样做的目的是返回上一级并创建名为<code>hexo</code>的文件夹，并进入该文件夹，</em>这个<code>hexo</code>文件夹就用来<strong>存放Hexo的相关文件</strong></td></tr><tr><td>然后再输入 <figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm">npm install hexo-<span class="hljs-keyword">cli</span> -g<br></code></pre></td></tr></table></figure> 等待他安装完成，然后再输入 <figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csharp">hexo <span class="hljs-keyword">init</span> blog<br></code></pre></td></tr></table></figure>命令运行结束后该文件夹下就会出现一个名为<code>blog</code>，这个文件夹就储存着Hexo的必备文件了* ##### 如果您是ROOT用户， 那么您可以直接使用MT管理器访问<code>/data/data/com.termux/files/hexo/blog</code>来快速查看和编辑配置文件* ##### 但如果您是非ROOT用户，您就不能直接使用MT管理器访问<code>blog</code>文件夹，这时您就可以在ZeroTermux的设置中<imgsrc="https://img.224322.xyz/file/25-08-15-3.png"alt="3.通过向右划或按音量➕打开该菜单" />依次点击<code>安装/还原Termux官方软件</code>–<code>(Zero)Utermux File Plug</code>–<code>确定</code>，稍等片刻便会开始安装质感文件安装完成后打开，点击左上角三横线，你就会看到<code>访问Utermux文件</code><imgsrc="https://img.224322.xyz/file/25-08-15-4.jpg" alt="4.e.g" />点击它你就能看到之前创建的<code>hexo</code>文件夹，<code>blog</code>文件夹也在里面，这样就能轻松的查看并编辑配置文件了* #### 2.2.启动 输入 <figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">hexo</span> g; <span class="hljs-attribute">hexo</span> s<br></code></pre></td></tr></table></figure>运行后会反出一个4000端口的本地地址（localhost:4000），我们在浏览器打开它，不出所料，你就能看到<imgsrc="https://img.224322.xyz/file/25-08-15-5.png" alt="5.这样的页面" />这就说明你的<strong>Hexo已经部署成功了！</strong> &gt; &gt;<strong>一些操作命令</strong> <figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">hexo <span class="hljs-built_in">new</span> <span class="hljs-built_in">post</span> 文章名字<br></code></pre></td></tr></table></figure>创建一篇新文章，文章名字可自取，文件在<code>*/blog/source/_posts</code>下<figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo cl</span><br></code></pre></td></tr></table></figure> 清理前一次生成的文件 <figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">hexo <span class="hljs-selector-tag">g</span><br></code></pre></td></tr></table></figure>以当前的文件配置生成网页 <figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo s</span><br></code></pre></td></tr></table></figure> 生成本地预览网页，端口默认为4000&gt; &gt; &gt; 后三条命令均为缩写，具体请查看<ahref="https://hexo.io/zh-cn/docs/">官方文档</a></td></tr><tr><td>&gt;由于各个主题的不同，所以这里不对安装主题做任何讲解，具体请查看官方文档或查阅资料</td></tr><tr><td>* ## 3.部署Hexo到Github Pages &gt;此步骤俗话讲就是将博客能让除自己以外的其他人也能访问你的博客，只不过GithubPages在国内容易被墙， 当然后续也可以通过再次部署到CloudflarePages再绑定到自己的域名来解决这个问题 &gt; &gt;关于域名这块可以去买一个便宜的<code>.xyz</code>域名，一年大概也就5块，<strong>如果0预算</strong>的话可以去<u><strong>申请一个免费域名</strong></u>，具体请看零度大佬的<ahref="https://www.bilibili.com/video/BV13pGJzpEpT/">这期视频</a></td></tr><tr><td>* #### 3.1.配置 登录<ahref="https://gtihub.com">Github</a>，创建一个仓库，如果是新账号那么主页会有一个<code>Create repository</code>，点它仓库名称就填 你的用户名+<code>.github.io</code><imgsrc="https://img.224322.xyz/file/25-08-15-6.png" alt="6.像这样" />再点击<code>Create repository</code>创建仓库</td></tr><tr><td>接着打开账户设置，找到<code>SSH and GPG Keys</code><imgsrc="https://img.224322.xyz/file/25-08-15-7.png" alt="7.e.g" />再按照下面👇的图片填<imgsrc="https://img.224322.xyz/file/25-08-15-8.png" alt="8.e.g" />最后点<code>Add SSH key</code>添加公钥</td></tr><tr><td>然后我们回到Termux，输入 <figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">ssh</span> -T git<span class="hljs-variable">@github</span>.com<br></code></pre></td></tr></table></figure> 运行结束后如果出现类似于<imgsrc="https://img.224322.xyz/file/25-08-15-9.png" alt="9.这样" />的提示，说明已经成功连接到Github了</td></tr><tr><td>接下来我们要配置一下Hexo的配置文件：打开<code>blog</code>目录下的<code>_config.xml</code>，滑到最底部，添加一些文字，像<imgsrc="https://img.224322.xyz/file/25-08-15-10.png" alt="这样" />然后保存，至此，我们的配置就搞定啦🎉 * #### 3.2.部署 返回Termux，输入<figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo d</span><br></code></pre></td></tr></table></figure>静静等待Hexo被推送到Github仓库，出现<code>done</code>提示后就说明推送完成，然后稍微等待一会儿，在访问你的用户名➕<code>.github.io</code> 就能成功打开博客啦😋<imgsrc="https://img.224322.xyz/file/25-08-15-11.gif" alt="11.嘻嘻" /> * ##4.再部署到CloudFlare Pages上 * #### 4.1.部署登录[Cloudflare仪表盘]，没有账号就注册一个，然后找到<code>计算 (Workers)</code><imgsrc="https://img.224322.xyz/file/25-08-15-12.png" alt="12.这个" />再点右上角的<code>创建</code>，然后选<code>Pages</code>–<code>导入现有的 Git 存储库</code><imgsrc="https://img.224322.xyz/file/25-08-15-13.png" alt="13.开始使用🤨" />下一个页面选<code>连接到 Github</code>，然后用你的Github账号授权一下</td></tr><tr><td>再返回来，选择自己相应的仓库，然后直接点<code>开始设置</code><imgsrc="https://img.224322.xyz/file/25-08-15-14.png" alt="14.e.g" />下一个页面，直接点<code>保持并部署</code>，静静的等待它部署完成😠</td></tr><tr><td>部署完成后会给你个链接（以.pages.dev结尾，点进去就和前面部署到Github是的网页一模一样的<imgsrc="https://img.224322.xyz/file/25-08-15-15.gif" alt="15.哇欧！" /> *#### 4.2.绑定域名 回到CloudflarePages页面，上方有个<code>自定义域</code>，点进去跟着向导走，就能成功把你的博客绑定到你的域名</td></tr></tbody></table><p><em>正文结束</em> &gt;这是我第一次用markdown写文章，可能排版有点丑💩可能有一些不全，但想到会补上的，得看我什么时候想到了😁</p>]]></content>
    
    
    
    <tags>
      
      <tag>Termux</tag>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
